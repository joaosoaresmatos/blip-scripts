const CONSTANTS={DEFAULT_STRATEGY:"default"};function createMenu({userChannel:e=null,channelTags:t=null,menuFields:n=null,userLanguage:o=null,orderOptions:i="asc"}={},l={default:{type:""}}){let u,a={userChannel:e,channelTags:t,menuFields:n,userLanguage:o,orderOptions:i};try{a=normalizeProps(a);const e={default:getDefaultMenu,blipchat:getBlipchatMenu,whatsapp:getWhatsappMenu,messenger:getMessengerMenu,gbm:getGBMMenu};u=e[a.userChannel]?e[a.userChannel](a,l):e.default(a,l)}catch(e){u=getFallbackMenu(e.message)}finally{return u}}function getBuildMenuStrategyFromConfig(e,t){return t[e.userChannel]?t[e.userChannel].type:CONSTANTS.DEFAULT_STRATEGY}function runMenuValidations(e,t,n){for(const{validator:o,arg:i}of n)if(!o(e,t,i))return!1;return!0}function buildMenu(e,t,n,o,i){let l=getBuildMenuStrategyFromConfig(e,t);return l===CONSTANTS.DEFAULT_STRATEGY||runMenuValidations(e,t,i[l])||(l=CONSTANTS.DEFAULT_STRATEGY),{content:n[l](e,t),type:o[l]}}function getFallbackMenu(e){return{content:{text:`Something went wrong while generating menu. Please, visit https://github.com/joaosoaresmatos/blip-scripts/blob/main/README.md to read more about it.\n\nDescription:\n\n${e}`},type:"application/vnd.lime.select+json"}}function getDefaultMenu(e,t){return{content:getTextMenu(e,t),type:"application/vnd.lime.select+json"}}function getBlipchatMenu(e,t){return buildMenu(e,t,{quick_reply:getQuickReply,button_menu:getQuickReply,default:getTextMenu},{quick_reply:"application/vnd.lime.select+json",button_menu:"application/vnd.lime.select+json",default:"application/vnd.lime.select+json"},{quick_reply:[],button_menu:[],default:[]})}function getWhatsappMenu(e,t){return buildMenu(e,t,{quick_reply:getWppQuickReplyMenu,list_menu:getWppListMenu,default:getTextMenu},{quick_reply:"application/json",list_menu:"application/json",default:"application/vnd.lime.select+json"},{quick_reply:[{validator:validateNumberOfOptions,arg:{max:3}}],list_menu:[{validator:validateNumberOfOptions,arg:{max:11}}],default:[]})}function getMessengerMenu(e,t){return buildMenu(e,t,{quick_reply:getQuickReplyMenu,default:getTextMenu},{quick_reply:"application/vnd.lime.select+json",default:"application/json"},{quick_reply:[{validator:validateNumberOfOptions,arg:{max:5}}],default:[]})}function getGBMMenu(e,t){return buildMenu(e,t,{quick_reply:getQuickReplyMenu,default:getTextMenu},{quick_reply:"application/vnd.lime.select+json",default:"application/json"},{quick_reply:[],default:[]})}function getOptionsMenu(e){let{menuFields:t}=e,n=[];return t.options&&(n=buildQuickReplyOptions(t.options)),{text:t.text,options:n}}function getQuickReplyMenu(e){let t=getOptionsMenu(e);return t.scope="immediate",t}function getWppQuickReplyMenu(e){const t={buttons:buildWppQuickReplyOptions(e.menuFields.options)};return getInteractiveMenu(e.menuFields,"button",t)}function getWppListMenu(e){const t={button:e.menuFields.textButton,sections:buildSections(e.menuFields.options)};return getInteractiveMenu(e.menuFields,"list",t)}function getTextMenu(e,t){let{menuFields:n}=e,o=n.header?`${n.header}\n\n`:"",i=n.footer?`\n\n${n.footer}`:"",l=`${o}${n.text}\n`;return l+=buildMenuTextOptions(e,t),{text:l+=i}}function buildMenuTextOptions(e,t){let{menuFields:n}=e,o=n.options;return o&&Array.isArray(o)?buildMenuTextOptionsWhenIsArray(e,t):o&&"object"==typeof o?buildMenuTextOptionsWhenIsObject(e,t):void 0}function buildMenuTextOptionsWhenIsArray(e,t){let{channelTags:n,menuFields:o}=e,i=o.options,l="",u=parseInt(i.length),a="desc"===e.orderOptions?u:1,r="desc"===e.orderOptions?-1:1;return i.forEach(e=>{"\n"===e[0]&&(e=e.replace("\n",""),l+="\n"),l+=`\n${n.bold.open}${a}${n.bold.close}. ${e}`,a+=r}),l}function buildMenuTextOptionsWhenIsObject(e,t){let{channelTags:n,menuFields:o}=e,i=o.options,l="";const u=Object.keys(i);let a=getNumberOfOptions(i),r="desc"===e.orderOptions?a:1,s="desc"===e.orderOptions?-1:1;return u.forEach((e,t)=>{l+=e?`\n${e}\n`:"\n",i[e].forEach(e=>{"\n"===e[0]&&(e=e.replace("\n",""),l+="\n"),l+=`\n${n.bold.open}${r}${n.bold.close}. ${e}`,r+=s}),l+=t<u.length-1?"\n":""}),l}function getInteractiveMenu(e,t,n){return{recipient_type:"individual",type:"interactive",interactive:{type:t,...buildHeader(e),body:{text:e.text},...buildFooter(e),action:n}}}function normalizeMenuOptionsToArray(e){if(Array.isArray(e))return e;let t=[];if(e&&"object"==typeof e)try{Object.entries(e).forEach(([,e]=options)=>{t=t.concat(e)})}catch(e){return[]}return t}function buildQuickReplyOptions(e){e=normalizeMenuOptionsToArray(e);let t=[];return e.forEach(e=>{t.push({text:e,type:"text/plain",value:e})}),t}function buildWppQuickReplyOptions(e){e=normalizeMenuOptionsToArray(e);let t=[];return e.forEach(e=>{t.push({type:"reply",reply:{id:e,title:e}})}),t}function buildHeader(e){return e.header&&"object"==typeof e.header?{header:{...e.header}}:e.header?{header:{type:"text",text:e.header}}:{}}function buildFooter(e){return e.footer?{footer:{text:e.footer}}:{}}function validateNumberOfOptions(e,t,n){try{const{min:t=1,max:o}=n,i=getNumberOfOptions(e.menuFields.options);return i>=t&&i<o+1}catch(e){return!1}}function getNumberOfOptions(e){let t=0;try{Array.isArray(e)?t=e.length:"object"==typeof e&&(t=Object.entries(e).reduce((e,[,t]=c)=>e+=t.length,0))}finally{return t}}function buildSections(e){return Array.isArray(e)?[{rows:buildListOptions(e)}]:Object.keys(e).map((t,n)=>({title:t,rows:buildListOptions(e[t],n)}))}function buildListOptions(e,t=1){return e.map((e,n)=>({id:`id:${t}.${n}`,...buildListRowTitle(e)}))}function buildListRowTitle(e){const t=e.split("\n"),n=t.length>1?{description:t[1]}:"";return{title:t[0],...n}}function normalizeProps(e){let t=normalizeMenuText(e),n=normalizeMenuOptions(e),o=normalizeMenuHeader(e),i=normalizeMenuFooter(e),l=normalizeMenuButton(e);return e.menuFields.text=t,e.menuFields.options=n,e.menuFields.header=o,e.menuFields.footer=i,e.menuFields.textButton=l,e}function normalizeMenuText(e){let t,{userChannel:n,menuFields:o,userLanguage:i}=e;return t=o.text[n]&&o.text[n][i]?o.text[n][i]:o.text.default&&o.text.default[i]?o.text.default[i]:o.text[n]?o.text[n]:o.text.default?o.text.default:o.text}function normalizeMenuHeader(e){let t,{menuFields:n,userLanguage:o,userChannel:i}=e;return t=n.header&&"string"==typeof n.header?n.header:n.header&&n.header[o]&&"string"==typeof n.header[o]?n.header[o]:n.header&&n.header[o]&&"whatsapp"===i?n.header[o]:n.header&&"whatsapp"===i?n.header:null}function normalizeMenuFooter(e){let t,{menuFields:n,userLanguage:o}=e;return t=n.footer&&n.footer[o]?n.footer[o]:"string"==typeof n.footer?n.footer:null}function normalizeMenuButton(e){let t,{menuFields:n,userLanguage:o}=e;return t=n.button&&n.button[o]?n.button[o]:"string"==typeof n.button?n.button:"Options"}function normalizeMenuOptions(e){let t,{menuFields:n,userLanguage:o}=e;return t=n.options[o]?n.options[o]:n.options}function run(e,t){return getMenu(e,t)}function getMenu(e,t){return createMenu({menuFields:{text:{default:{"en-US":`This is a text to describe the menu that will be generated to Default channel, the user will ${(t=JSON.parse(t)).bold.open}choose one of the options bellow${t.bold.close}`,"pt-BR":`This is a text to describe the menu that will be generated to Default channel, the user will ${t.bold.open}choose one of the options bellow${t.bold.close}`},whatsapp:{"en-US":`This is a text to describe the menu that will be generated to WhatsApp channel, the user will ${t.bold.open}choose one of the options bellow${t.bold.close}`,"pt-BR":`This is a text to describe the menu that will be generated to WhatsApp channel, the user will ${t.bold.open}choose one of the options bellow${t.bold.close}`},facebook:{"en-US":`This is a text to describe the menu that will be generated to Facebook channel, the user will ${t.bold.open}choose one of the options bellow${t.bold.close}`,"pt-BR":`This is a text to describe the menu that will be generated to Facebook channel, the user will ${t.bold.open}choose one of the options bellow${t.bold.close}`},telegram:{"en-US":`This is a text to describe the menu that will be generated to Telegram channel, the user will ${t.bold.open}choose one of the options bellow${t.bold.close}`,"pt-BR":`This is a text to describe the menu that will be generated to Telegram channel, the user will ${t.bold.open}choose one of the options bellow${t.bold.close}`}},options:{"en-US":{"Sess達o 1":["Option 1","Option 2"],"Sess達o 2":["Option 3"]},"pt-BR":{"Sess達o 1":["Option 1","Option 2","Option 3","Option 4","Option 5"],"Sess達o 2":["Option 6","Option 7","Option 8"]}},header:{"en-US":"This is a text to describe the menu (in the top) that will be generated to Whatsapp channel. Its should have in max 60 characters","pt-BR":"This is a text to describe the menu (in the top) that will be generated to Whatsapp channel. Its should have in max 60 characters"},footer:{"en-US":"This is a text to describe the menu (in the bottom) that will be generated to Whatsapp channel. Its should have in max 60 characters","pt-BR":"This is a text to describe the menu (in the bottom) that will be generated to Whatsapp channel. Its should have in max 60 characters"},button:{"en-US":"This is a text of menu button in Whatsapp channel. Its should have in max 20 characters","pt-BR":"This is a text of menu button in Whatsapp channel. Its should have in max 20 characters"}},userChannel:e,channelTags:t,userLanguage:"pt-BR"},{whatsapp:{type:"list_menu"}})}let channelTags=JSON.stringify({bold:{open:"*",close:"*"},italic:{open:"_",close:"_"},strikethrough:{open:"~",close:"~"}}),userChannel="whatsapp";console.log("-------------"),console.log(JSON.stringify(run(userChannel,channelTags))),console.log("-------------");const result=run(userChannel,channelTags);console.log(result),console.log("-------------"),module.exports={getMenu:getMenu,createMenu:createMenu,getQuickReplyMenu:getQuickReplyMenu,getWppQuickReplyMenu:getWppQuickReplyMenu,getTextMenu:getTextMenu,normalizeProps:normalizeProps};
